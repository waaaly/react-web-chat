{"version":3,"sources":["App/pages/ChatContent/components/ChatHeader/index.tsx","App/pages/ChatContent/components/ChatTool/index.tsx","App/pages/ChatContent/components/ChatFaceBag/index.tsx","App/pages/ChatContent/components/ChatSend/index.tsx","App/components/UIPreview/index.tsx","App/pages/ChatContent/components/ChatRecords/index.tsx","App/pages/ChatContent/index.tsx"],"names":["ChatHeader","chatStore","useChatStore","className","src","chat","avatar","alt","nickname","uploadProp","showUploadList","action","headers","Authorization","getToken","SendPicture","props","upload","name","maxCount","beforeUpload","file","console","log","test","type","error","onChange","e","status","filename","response","onUploadSuccess","PictureOutlined","ManageFaceBag","useState","visiable","setVisiable","deleteFacebag","useDeleteFacebag","request","addr","a","addSplit","split","length","res","data","onDeleteSuccess","success","message","onClick","SettingOutlined","title","facebagList","centered","visible","onOk","cancelButtonProps","style","display","width","map","item","key","placement","color","deleteRequest","CloseCircleOutlined","ChatFaceBag","setFacebagList","getFacebag","useGetFacebag","multiple","list","push","useEffect","index","indexOf","splice","onSelect","PlusOutlined","ChatSend","globalStore","useGlobalStore","socket","useForm","form","emojiVisiable","setemojiVisiable","farVisiable","setfarVisiable","editorRef","useRef","sendMessage","getFieldsValue","validatorEditor","obj","userId","user","userInfo","toId","BraftEditor","createEditorState","toHTML","includes","emit","current","clearEditorContent","value","isNull","valueRaw","toRAW","i","blocks","text","trim","setFieldsValue","ContentUtils","insertText","native","SmileOutlined","HeartOutlined","Item","ref","controls","handleKeyCommand","cmd","state","onFocus","ArrowRightOutlined","UIPreview","srcList","children","imageProps","imgId","String","Math","random","substring","document","getElementById","click","cursor","PreviewGroup","thisSrc","id","hidden","Group","ChatRecords","observer","node","querySelector","scrollTop","scrollHeight","getImgSrcList","htmlText","srcs","entityMap","url","currentRecords","fromId","_id","dangerouslySetInnerHTML","__html","time","ChatContent"],"mappings":"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","file":"static/js/4.6810de6c.chunk.js","sourcesContent":["import React from \"react\";\nimport './index.less';\nimport {useChatStore} from \"@/App/layout/Chat/ChatStore/ChatStore\";\nimport {Observer} from \"mobx-react-lite\";\n\nfunction ChatHeader() {\n  const chatStore = useChatStore();\n  return (\n    <Observer>\n      {() =>\n        <div className=\"chat-to-header-wrapper\">\n          <div className=\"chat-info\">\n            <div className=\"avatar\">\n              <img src={chatStore.chat.avatar} alt=\"\" />\n            </div>\n            <div className=\"chat-name\">{chatStore.chat.nickname}</div>\n          </div>\n        </div>\n      }\n    </Observer>\n\n  );\n}\n\nexport default ChatHeader;","import React, { useState } from 'react';\r\nimport { Upload, Button, message, Modal, Tooltip } from 'antd';\r\nimport { PictureOutlined, SettingOutlined, CloseCircleOutlined } from '@ant-design/icons';\r\nimport { getToken } from \"@/App/utils/operatorLocalStorage\";\r\nimport { useDeleteFacebag } from \"@/App/httpClientRequest/useApi\";\r\nimport './index.less'\r\nconst uploadProp = {\r\n    showUploadList: false,\r\n    action: \"http://1.12.246.138:3000/api/\",\r\n    headers: {\r\n        Authorization: getToken(),\r\n    },\r\n}\r\n\r\nexport function SendPicture(props) {\r\n    const upload = {\r\n        ...uploadProp,\r\n        name: 'picture',\r\n        action: uploadProp.action + 'savePicture',\r\n        maxCount: 1,\r\n        beforeUpload: file => {\r\n            console.log(file)\r\n            var reg = /\\/(png|jpg|gif|jpeg|webp)$/;\r\n            if (!reg.test(file.type)) {\r\n                message.error(`暂不支持的文件格式`);\r\n                return false\r\n            }\r\n            return true\r\n        },\r\n        onChange: (e) => {\r\n            var { file } = e\r\n            if (file.status === 'done') {\r\n                var { filename } = file.response\r\n                console.log(filename)\r\n                return props.onUploadSuccess(`http://1.12.246.138:4000/picture/${filename}`)\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Upload {...upload}>\r\n            <Button className=\"chat-tool-btn\">\r\n                <PictureOutlined />\r\n            </Button>\r\n        </Upload>\r\n    )\r\n}\r\n\r\nexport function ManageFaceBag(props) {\r\n    const [visiable, setVisiable] = useState(false)\r\n    const { request: deleteFacebag } = useDeleteFacebag();\r\n\r\n    async function deleteRequest(addr: string) {\r\n        var addSplit = addr.split('/')\r\n        var filename = addSplit[addSplit.length - 1]\r\n\r\n        var res = (await deleteFacebag({ filename })).data\r\n        console.log(res)\r\n        if (res.data) {\r\n            props.onDeleteSuccess(addr)\r\n            message.success(res.message)\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <Button className=\"chat-tool-btn\" onClick={() => { setVisiable(true) }}>\r\n                <SettingOutlined />\r\n            </Button>\r\n            <Modal\r\n                title={`表情管理(${props.facebagList.length})`}\r\n                centered\r\n                visible={visiable}\r\n                onOk={() => { setVisiable(false) }}\r\n                cancelButtonProps={{ style: { display: 'none' } }}\r\n                width={1000}\r\n            >\r\n                <div>\r\n                    {\r\n                        props.facebagList.map(item => {\r\n                            return (\r\n                                <Tooltip key={item} placement=\"topRight\" color={\"red\"}\r\n                                    title={\r\n                                        <div onClick={() => { deleteRequest(item) }}>\r\n                                            <CloseCircleOutlined />\r\n                                        </div>\r\n                                    }>\r\n                                    <img className=\"facebag-img\" src={item} />\r\n                                </Tooltip>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function SendFile() {\r\n\r\n}\r\n\r\n","\r\nimport React, { useState, useEffect } from 'react'\r\nimport './index.less'\r\nimport { useGetFacebag } from '@/App/httpClientRequest/useApi';\r\nimport { PlusOutlined } from '@ant-design/icons'\r\nimport { Upload, Button } from 'antd';\r\nimport { getToken } from \"@/App/utils/operatorLocalStorage\";\r\nimport { ManageFaceBag } from '../ChatTool'\r\nexport function ChatFaceBag(props) {\r\n    const [facebagList, setFacebagList] = useState<string[]>([])\r\n    const { request: getFacebag } = useGetFacebag();\r\n    const uploadProp = {\r\n        name: 'facebag',\r\n        multiple: true,\r\n        showUploadList: false,\r\n        action: \"http://1.12.246.138:3000/api/saveFacebag\",\r\n        headers: {\r\n            Authorization: getToken(),\r\n        },\r\n        onChange: (e) => {\r\n            console.log(e)\r\n            var { file } = e\r\n            if (file.status === 'done') {\r\n                var { filename } = file.response\r\n                console.log(filename)\r\n                var list: string[] = facebagList\r\n                list.push(`http://1.12.246.138:3000/facebag/${filename}`)\r\n                setFacebagList(list)\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        (\r\n            async () => {\r\n                let { facebagList } = (await getFacebag()).data.data\r\n                setFacebagList(facebagList)\r\n            }\r\n        )();\r\n    }, [])\r\n\r\n    function deleteFacebag(item: string) {\r\n        console.log(item)\r\n        var list = facebagList,\r\n            index = list.indexOf(item);\r\n\r\n        list.splice(index, 1)\r\n        setFacebagList([...list])\r\n    }\r\n\r\n    return (\r\n        <div className=\"face-bag-scroll\">\r\n            <ManageFaceBag facebagList={facebagList} onDeleteSuccess={deleteFacebag} />\r\n            <ul className=\"face-bag-ul\">\r\n                {\r\n                    facebagList.map(item => {\r\n                        return (\r\n                            <li onClick={() => props.onSelect(item)} key={item} className=\"face-bag-ul-li\">\r\n                                <img src={item} />\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n\r\n                <li className=\"face-bag-ul-li\">\r\n                    <Upload {...uploadProp}>\r\n                        <Button className=\"face-bag-ul-li-btn\">\r\n                            <PlusOutlined />\r\n                        </Button>\r\n                    </Upload>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useRef, useState } from \"react\";\nimport './index.less';\nimport { Button, Form, Input } from \"antd\";\nimport {\n  ArrowRightOutlined, SmileOutlined, HeartOutlined\n} from '@ant-design/icons';\nimport { useGlobalStore } from \"@/App/store/GlobalStore\";\nimport { useChatStore } from \"@/App/layout/Chat/ChatStore/ChatStore\";\nimport { Picker } from \"emoji-mart\"\nimport 'emoji-mart/css/emoji-mart.css'\nimport { ChatFaceBag } from '../ChatFaceBag'\nimport { SendPicture } from '../ChatTool'\nimport BraftEditor from 'braft-editor'\nimport 'braft-editor/dist/index.css'\nimport { ContentUtils } from 'braft-utils'\nfunction ChatSend() {\n  const globalStore = useGlobalStore();\n  const chatStore = useChatStore();\n  const socket = globalStore.socket;\n  const [form] = Form.useForm();\n  const [emojiVisiable, setemojiVisiable] = useState(false)\n  const [farVisiable, setfarVisiable] = useState(false)\n  const editorRef = useRef(null);\n  function onEmojiVisiable() {\n    setemojiVisiable(!emojiVisiable)\n    setfarVisiable(false)\n  }\n  function onFarVisiable() {\n    setemojiVisiable(false)\n    setfarVisiable(!farVisiable)\n  }\n  \n  const sendMessage = () => {\n    let message = form.getFieldsValue().message;\n    if (validatorEditor(message)) {\n      let obj = {\n        userId: globalStore.user.userInfo.userId,\n        toId: '',\n        avatar: globalStore.user.userInfo.avatar,\n        nickname: globalStore.user.userInfo.nickname,\n        message: BraftEditor.createEditorState(message).toHTML(),\n        type: 'text'\n      };\n      if (chatStore.chat.userId.includes('group')) {\n        socket.emit('sendToAll', obj);\n      } else {\n        obj.toId = chatStore.chat.userId;\n        socket.emit('sendToPrivate', obj);\n      }\n      const e:any=editorRef.current;\n      e.clearEditorContent();\n    }\n  };\n\n  function sendFacebag(e) {\n    console.log(e)\n    let obj = {\n      userId: globalStore.user.userInfo.userId,\n      toId: '',\n      avatar: globalStore.user.userInfo.avatar,\n      nickname: globalStore.user.userInfo.nickname,\n      message: e,\n      type: 'facebag'\n    };\n    if (chatStore.chat.userId.includes('group')) {\n      socket.emit('sendToAll', obj);\n    } else {\n      obj.toId = chatStore.chat.userId;\n      socket.emit('sendToPrivate', obj);\n    }\n  }\n  function sendPicture(e) {\n    console.log(e)\n    let obj = {\n      userId: globalStore.user.userInfo.userId,\n      toId: '',\n      avatar: globalStore.user.userInfo.avatar,\n      nickname: globalStore.user.userInfo.nickname,\n      message: e,\n      type: 'img'\n    };\n    if (chatStore.chat.userId.includes('group')) {\n      socket.emit('sendToAll', obj);\n    } else {\n      obj.toId = chatStore.chat.userId;\n      socket.emit('sendToPrivate', obj);\n    }\n  }\n  //检测富文本是否内容为空/空行/空格\n  const validatorEditor = (value: any) => {\n    let isNull = true;\n    let valueRaw = BraftEditor.createEditorState(value).toRAW(true)\n    for (let i = 0; i < valueRaw.blocks.length; i++) {\n      if (valueRaw.blocks[i].text.trim() || valueRaw.blocks[i].type === \"atomic\") {\n        isNull = false;\n        break;\n      }\n    }\n    return !isNull;\n  }\n  const insertEmojisText = (e: any) => {\n    form.setFieldsValue({\n      message: ContentUtils.insertText(BraftEditor.createEditorState(form.getFieldsValue().message), e.native)\n    })\n\n  }\n\n  const keyHandler = (cmd, state) => {\n    if(cmd === 'split-block'){\n      sendMessage();\n      return 'handled'\n    }\n    return 'not-handled'\n  }\n\n  return (\n    <div className=\"chat-send-wrapper\" >\n      <div className={emojiVisiable ? 'emoji-pop' : 'pop-none'}>\n        <Picker onClick={insertEmojisText} />\n      </div>\n      <div className={farVisiable ? 'emoji-pop' : 'pop-none'}>\n        <ChatFaceBag onSelect={sendFacebag} />\n      </div>\n      <div className=\"tool-bar\">\n        <Button className=\"btn-icon\" onClick={onEmojiVisiable}>\n          <SmileOutlined />\n        </Button>\n        <Button className=\"btn-icon\" onClick={onFarVisiable}>\n          <HeartOutlined />\n        </Button>\n        <SendPicture onUploadSuccess={sendPicture} />\n      </div>\n      <Form form={form} className=\"form-row\">\n        <Form.Item\n          className=\"input-send\"\n          name=\"message\"\n        >\n          <BraftEditor ref={editorRef} controls={['media']} handleKeyCommand={keyHandler}  onFocus={() => { setemojiVisiable(false); setfarVisiable(false) }} />\n        </Form.Item>\n        <Form.Item>\n          <button className=\"btn-send\" onClick={sendMessage}>\n            <ArrowRightOutlined />\n          </button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n}\n\nexport default ChatSend","/*\r\n* crate by zhaohelin\r\n* 说明：srcList比src优先,假如srcList为空或不传就会监测src，其他用法与antd的Image组件一样\r\n*/\r\n\r\nimport React from 'react';\r\nimport { Image } from 'antd'\r\nfunction UIPreview(props) {\r\n    const { src, srcList, children, ...imageProps } = props;\r\n    const imgId = String(Math.random()).substring(2)\r\n    const triggerPreview = () => {\r\n        document.getElementById(imgId)?.click();\r\n    }\r\n    return (\r\n        <>\r\n            {props.children && <div onClick={triggerPreview} style={{cursor:'pointer'}}>{children}</div>}\r\n            {srcList && srcList.length\r\n                ? <Image.PreviewGroup>\r\n                    {props.srcList?.map((thisSrc, index) => {\r\n                        return (\r\n                            <Image id={imgId + (index ? index : '')} key={thisSrc} src={thisSrc} {...imageProps} hidden={children} />\r\n                        )\r\n                    })}\r\n                </Image.PreviewGroup>\r\n                : src && <Image id={imgId} src={src} {...imageProps} hidden={children} />\r\n            }\r\n        </>\r\n    )\r\n}\r\nUIPreview.Group = Image.PreviewGroup;\r\nexport default UIPreview;","import React, { useEffect } from \"react\";\nimport './index.less';\nimport { useChatStore } from \"@/App/layout/Chat/ChatStore/ChatStore\";\nimport { useGlobalStore } from \"@/App/store/GlobalStore\";\nimport { observer } from \"mobx-react-lite\";\nimport { Image } from 'antd';\nimport UIPreview from \"@/App/components/UIPreview\";\nimport BraftEditor from \"braft-editor\";\nconst ChatRecords = observer(() => {\n  const globalStore = useGlobalStore();\n  const chatStore = useChatStore();\n\n  useEffect(() => {\n    let node = document.querySelector(\"#R_chat_content\");\n    if (node) {\n      node.scrollTop = node.scrollHeight;\n    }\n  });\n  const getImgSrcList = (htmlText: string) => {\n    let srcs: string[] = [];\n    const valueRaw = BraftEditor.createEditorState(htmlText).toRAW(true)\n    for (let key in valueRaw.entityMap) {\n      if (valueRaw.entityMap[key].type === 'IMAGE') {\n        srcs.push(valueRaw.entityMap[key].data.url);\n      }\n    }\n    return srcs;\n  }\n\n  return (\n    <div className=\"chat-records-wrapper\">\n      {chatStore.chat.currentRecords.map((item) =>\n        <div className={`message${item.fromId === globalStore.user.userInfo.userId ? ' self' : ''}`} key={item._id}>\n          <div className=\"message-wrapper\">\n            <div className=\"message-content\">\n              {item.fromId !== globalStore.user.userInfo.userId && chatStore.chat.userId.includes('group') ?\n                <h6>{item.nickname}</h6> : null}\n              {\n                ['img', 'facebag'].includes(item.type)\n                  ? <Image src={item.message} alt={item.message} />\n                  : <UIPreview srcList={getImgSrcList(item.message)}>\n                    <div dangerouslySetInnerHTML={{ __html: item.message }} />\n                  </UIPreview>\n              }\n            </div>\n          </div>\n          <div className=\"message-options\">\n            <div className=\"avatar\">\n              <img src={item.avatar} alt={item.nickname} />\n            </div>\n            <span className=\"message-date\">{item.time}</span>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n});\n\nexport default ChatRecords;\n","/*\n * @Description: \n * @Author: waaaly\n * @Github: https://github.com/waaaly\n * @Date: 2021-10-20 16:39:07\n * @LastEditTime: 2021-10-21 11:59:02\n */\nimport React  from \"react\";\nimport './index.less';\nimport {useChatStore} from \"@/App/layout/Chat/ChatStore/ChatStore\";\nimport {observer, Observer} from \"mobx-react-lite\";\nimport ChatHeader from \"@/App/pages/ChatContent/components/ChatHeader\";\nimport ChatSend from \"@/App/pages/ChatContent/components/ChatSend\";\nimport ChatRecords from \"@/App/pages/ChatContent/components/ChatRecords\";\n\nconst ChatContent = observer(() => {\n  const chatStore = useChatStore();\n\n  return (\n    <div className=\"chat-content-wrapper\">\n      {\n        chatStore.chat.userId ?\n          <>\n            <ChatHeader />\n            <div className=\"chat-content hidden-scrollbar\" id='R_chat_content'>\n              <ChatRecords />\n            </div>\n            <ChatSend />\n          </>\n          : <div className=\"chat-content-null\">\n            <p>欢迎使用 WebChat</p>\n          </div>\n      }\n    </div>\n  );\n});\n\nexport default ChatContent;"],"sourceRoot":""}